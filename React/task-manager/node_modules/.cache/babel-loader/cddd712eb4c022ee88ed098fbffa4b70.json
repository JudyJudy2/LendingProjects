{"ast":null,"code":"\"use strict\";\n\nvar mapO = require(\"map-o\"),\n    iterateObject = require(\"iterate-object\");\n\nvar emoji = require(\"emojilib\");\n\nvar nameMap = module.exports = {};\nnameMap.emoji = mapO(emoji.lib, function (value) {\n  return value.char;\n}, true);\niterateObject(nameMap.emoji, function (value, name, obj) {\n  return !value && delete obj[name] || true;\n});\n/**\n * get\n * Gets the emoji character (unicode) by providing the name.\n *\n * @name get\n * @function\n * @param {String} name The emoji name.\n * @return {String} The emoji character (unicode).\n */\n\nnameMap.get = function (name) {\n  if (name.charAt(0) === \":\") {\n    name = name.slice(1, -1);\n  }\n\n  return this.emoji[name];\n};\n\nemoji = null;","map":{"version":3,"sources":["/home/konstantin/Desktop/projects/LendingProjects/ReactTaskManager/task-manager/node_modules/emoji-name-map/lib/index.js"],"names":["mapO","require","iterateObject","emoji","nameMap","module","exports","lib","value","char","name","obj","get","charAt","slice"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,OAAD,CAAlB;AAAA,IACIC,aAAa,GAAGD,OAAO,CAAC,gBAAD,CAD3B;;AAGA,IAAIE,KAAK,GAAGF,OAAO,CAAC,UAAD,CAAnB;;AAEA,IAAIG,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAA/B;AACAF,OAAO,CAACD,KAAR,GAAgBH,IAAI,CAACG,KAAK,CAACI,GAAP,EAAY,UAAUC,KAAV,EAAiB;AAC7C,SAAOA,KAAK,CAACC,IAAb;AACH,CAFmB,EAEjB,IAFiB,CAApB;AAGAP,aAAa,CAACE,OAAO,CAACD,KAAT,EAAgB,UAAUK,KAAV,EAAiBE,IAAjB,EAAuBC,GAAvB,EAA4B;AACrD,SAAO,CAACH,KAAD,IAAU,OAAOG,GAAG,CAACD,IAAD,CAApB,IAA8B,IAArC;AACH,CAFY,CAAb;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAN,OAAO,CAACQ,GAAR,GAAc,UAAUF,IAAV,EAAgB;AAC1B,MAAIA,IAAI,CAACG,MAAL,CAAY,CAAZ,MAAmB,GAAvB,EAA4B;AACxBH,IAAAA,IAAI,GAAGA,IAAI,CAACI,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACH;;AACD,SAAO,KAAKX,KAAL,CAAWO,IAAX,CAAP;AACH,CALD;;AAOAP,KAAK,GAAG,IAAR","sourcesContent":["\"use strict\";\n\nvar mapO = require(\"map-o\"),\n    iterateObject = require(\"iterate-object\");\n\nvar emoji = require(\"emojilib\");\n\nvar nameMap = module.exports = {};\nnameMap.emoji = mapO(emoji.lib, function (value) {\n    return value.char;\n}, true);\niterateObject(nameMap.emoji, function (value, name, obj) {\n    return !value && delete obj[name] || true;\n});\n\n/**\n * get\n * Gets the emoji character (unicode) by providing the name.\n *\n * @name get\n * @function\n * @param {String} name The emoji name.\n * @return {String} The emoji character (unicode).\n */\nnameMap.get = function (name) {\n    if (name.charAt(0) === \":\") {\n        name = name.slice(1, -1);\n    }\n    return this.emoji[name];\n};\n\nemoji = null;"]},"metadata":{},"sourceType":"script"}